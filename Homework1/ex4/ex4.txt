def ex4_1_recursive(w, t, tasks):

	current = all in tasks with time t

	//handle first tasks
	if t == first
		op1 = op2 = 0
	return!

	op1 = ex4(w=0, t-1, tasks)
	op2 = ex4(w=1, t-1, tasks)

	if w == 0:
		Freelance(current) + min (op1 + , op2 + Severance)
	if w == 1:
		 Salary + min(op1 + Hire, op2)
def ex4_1(tasks):
	m = [2][T] = +inf
	for i in T:
		current = all tasks of time t = i
		op1 = m[0][i-1] //0 if i = 0
		op2 = m[1][i-1] // 0 if i = 0
		m[0][i] = Freelance(current) + min(op1, op2 + Severance)
		m[1][i] = Salary + min(op1 + Hire, op2)
	return min(m[0][T], m[1][T])
		
		
def ex4_2_k2(tasks):
	m = [2*k][T] = +inf	//from here!
	for i in T:
		current = all tasks of time t = i
		op1 = m[0][i-1] //0 if i = 0
		op2 = m[1][i-1] // 0 if i = 0
		op3 = m[2][i-1]
		... 
		op2k = m[2k - 1][i-1]

		m[0][i] = Freelance(current) + min(op1, op2 + Severance)
		m[1][i] = Salary + min(op1 + Hire, op2)
	return min(m[0][T], m[1][T])		



def ex4_2_2(tasks):
	m = [4][T] = +inf	//from here!
	for i in T:16:04 30/11/2018
		current = all tasks of time t = i
		op1 = m[00][i-1] //0 if i = 0
		op2 = m[01][i-1] // H if i = 0
		op3 = m[10][i-1] //H if i = 0
		op4 = m[11][i-1] //2*H if i = 0

		m[00][i] = Freelance(current, [1,2]) + min(op1, op2 + Severance, op3 + Severance, op4 + 2*Severance)
		m[01][i] = Salary + Freelance(current, [1]) + min(op1 + Hire, op2, op3 + Severance + Hire, op4 + Severance)
		m[10][i] = Salary + Freelance(current, [2]) + min(op1 + Hire, op2 + Severance + Hire, op3, op4 + Severance)
		m[11][i] = 2*Salary + min(op1 + 2*Hire, op2 + Hire, op3 + Hire, op4)
	return min(m[00][T], m[01][T], m[10][T], m[11][T])



